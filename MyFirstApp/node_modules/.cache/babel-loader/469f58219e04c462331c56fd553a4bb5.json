{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morem\\\\OneDrive\\\\Documents\\\\GitHub\\\\potential-graph\\\\advanced\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Map from \"./Map\";\nimport Spinner from \"./Spinner\"; // import EditForm from './EditForm';\n// ANT DESIGN IMPORTS\n// import {Button} from 'antd';\n// const Description = props => <div> {props.description} </div>\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      preloader: true\n    };\n\n    this.deleteLogic = allCards => {\n      // SLICE MEANS TO DELETE THE CURRENT AND SHOW THE REST\n      // this is amazing. slice() method actually slices the itmes in array.\n      // if 1 is passed as arg, then it deletes / slices the 1st value and returns the array of remaining items\n      const cards = this.state.data.filter(e => e.name !== allCards); // currentCard => currentCard.name !== allCards\n\n      this.setState({\n        data: [...cards]\n      });\n    };\n  }\n\n  // binding the function in a parent lets us use that functon without an arrow function in its child so that its directly called\n  // constructor(props) {\n  //   super(props);\n  //   this.deleteLogic = this.deleteLogic.bind(this);\n  // }\n  // fetching the data from JSON file\n  // componentDidMount = async () => {\n  //   const api = await axios.get(`https://jsonplaceholder.typicode.com/users`);\n  //\n  //   console.log(api.data);\n  //\n  //   // updating the state\n  //   this.setState({ data: api.data, preloader: false });\n  // };\n  componentDidMount() {\n    axios.get(`https://jsonplaceholder.typicode.com/users`).then(jsonData => this.setState({\n      data: jsonData.data,\n      preloader: false\n    }));\n  } // THIS IS AN APPLICATION OF LIFTING THE STATE UP\n\n\n  render() {\n    if (this.state.preloader) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        msg: \"Loading...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      });\n    } // else condition\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      apiData: this.state.data,\n      deleteLogic: this.deleteLogic,\n      unique: this.state.data.id,\n      hideName: this.hideName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), this.state.data.map(entry => /*#__PURE__*/React.createElement(\"p\", {\n      key: entry.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 42\n      }\n    }, entry.name)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/morem/OneDrive/Documents/GitHub/potential-graph/advanced/src/App.js"],"names":["React","Component","axios","Map","Spinner","App","state","data","preloader","deleteLogic","allCards","cards","filter","e","name","setState","componentDidMount","get","then","jsonData","render","id","hideName","map","entry"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AAEA;AACA;AAEA;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,SAAS,EAAE;AAAvB,KADkB;;AAAA,SAyB1BC,WAzB0B,GAyBZC,QAAQ,IAAI;AACxB;AACA;AACA;AACA,YAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,QAAvC,CAAd,CAJwB,CAIwC;;AAChE,WAAKK,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAE,CAAC,GAAGI,KAAJ;AADM,OAAd;AAGD,KAjCyB;AAAA;;AAG1B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAK,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,KAAK,CAACe,GAAN,CAAW,4CAAX,EAAwDC,IAAxD,CAA6DC,QAAQ,IAAI,KAAKJ,QAAL,CAAc;AAACR,MAAAA,IAAI,EAAEY,QAAQ,CAACZ,IAAhB;AAAsBC,MAAAA,SAAS,EAAE;AAAjC,KAAd,CAAzE;AAED,GAtByB,CAwB1B;;;AAWAY,EAAAA,MAAM,GAAG;AAEP,QAAI,KAAKd,KAAL,CAAWE,SAAf,EAA0B;AACxB,0BAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAJM,CAMP;;;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,GAAD;AACE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,IADtB;AAEE,MAAA,WAAW,EAAE,KAAKE,WAFpB;AAGE,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBc,EAH1B;AAIE,MAAA,QAAQ,EAAE,KAAKC,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAcG,KAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,GAAhB,CAAqBC,KAAD,iBAAY;AAAG,MAAA,GAAG,EAAEA,KAAK,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBG,KAAK,CAACV,IAAzB,CAAhC,CAdH,CADF;AAkBD;;AA5DyB;;AA+D5B,eAAeT,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Map from \"./Map\";\r\nimport Spinner from \"./Spinner\";\r\n// import EditForm from './EditForm';\r\n\r\n// ANT DESIGN IMPORTS\r\n// import {Button} from 'antd';\r\n\r\n// const Description = props => <div> {props.description} </div>\r\n\r\nclass App extends Component {\r\n  state = { data: [], preloader: true };\r\n\r\n  // binding the function in a parent lets us use that functon without an arrow function in its child so that its directly called\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.deleteLogic = this.deleteLogic.bind(this);\r\n  // }\r\n\r\n  // fetching the data from JSON file\r\n  // componentDidMount = async () => {\r\n  //   const api = await axios.get(`https://jsonplaceholder.typicode.com/users`);\r\n  //\r\n  //   console.log(api.data);\r\n  //\r\n  //   // updating the state\r\n  //   this.setState({ data: api.data, preloader: false });\r\n  // };\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://jsonplaceholder.typicode.com/users`).then(jsonData => this.setState({data: jsonData.data, preloader: false}))\r\n\r\n  }\r\n\r\n  // THIS IS AN APPLICATION OF LIFTING THE STATE UP\r\n  deleteLogic = allCards => {\r\n    // SLICE MEANS TO DELETE THE CURRENT AND SHOW THE REST\r\n    // this is amazing. slice() method actually slices the itmes in array.\r\n    // if 1 is passed as arg, then it deletes / slices the 1st value and returns the array of remaining items\r\n    const cards = this.state.data.filter(e => e.name !== allCards); // currentCard => currentCard.name !== allCards\r\n    this.setState({\r\n      data: [...cards]\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    if (this.state.preloader) {\r\n      return <Spinner msg=\"Loading...\" />;\r\n    }\r\n\r\n    // else condition\r\n    return (\r\n      <div >\r\n        {/* <Button type=\"button\">\r\n                    Click Me!\r\n                </Button> */}\r\n        {/* \r\n  <Card title=\"Card title\">Card content</Card> */}\r\n\r\n        {/* deleteLogic on LHS is a function passed as a prop */}\r\n        <Map\r\n          apiData={this.state.data}\r\n          deleteLogic={this.deleteLogic}\r\n          unique={this.state.data.id}\r\n          hideName={this.hideName}\r\n        />\r\n        {this.state.data.map((entry) => (<p key={entry.id}>{entry.name}</p>))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}